[
    {
        "label": "pytest",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pytest",
        "description": "pytest",
        "detail": "pytest",
        "documentation": {}
    },
    {
        "label": "webdriver",
        "importPath": "selenium",
        "description": "selenium",
        "isExtraImport": true,
        "detail": "selenium",
        "documentation": {}
    },
    {
        "label": "Options",
        "importPath": "selenium.webdriver.chrome.options",
        "description": "selenium.webdriver.chrome.options",
        "isExtraImport": true,
        "detail": "selenium.webdriver.chrome.options",
        "documentation": {}
    },
    {
        "label": "Options",
        "importPath": "selenium.webdriver.firefox.options",
        "description": "selenium.webdriver.firefox.options",
        "isExtraImport": true,
        "detail": "selenium.webdriver.firefox.options",
        "documentation": {}
    },
    {
        "label": "sleep",
        "importPath": "time",
        "description": "time",
        "isExtraImport": true,
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "By",
        "importPath": "selenium.webdriver.common.by",
        "description": "selenium.webdriver.common.by",
        "isExtraImport": true,
        "detail": "selenium.webdriver.common.by",
        "documentation": {}
    },
    {
        "label": "pytest_addoption",
        "kind": 2,
        "importPath": "conftest",
        "description": "conftest",
        "peekOfCode": "def pytest_addoption(parser):\n    parser.addoption('--browser_name', action='store', default='chrome',\n                     help=\"Choose browser: chrome or firefox\")\n    parser.addoption('--language', action=\"store\", default=None,\n                     help=\"Choose language: ru, en\")\n@pytest.fixture(scope=\"function\")\ndef browser(request):\n    user_language = request.config.getoption(\"language\")\n    browser_name = request.config.getoption(\"browser_name\")\n    options = Options()",
        "detail": "conftest",
        "documentation": {}
    },
    {
        "label": "browser",
        "kind": 2,
        "importPath": "conftest",
        "description": "conftest",
        "peekOfCode": "def browser(request):\n    user_language = request.config.getoption(\"language\")\n    browser_name = request.config.getoption(\"browser_name\")\n    options = Options()\n    options.add_experimental_option('prefs', {'intl.accept_languages': user_language})\n    options_firefox = OptionsFirefox()\n    options_firefox.set_preference(\"intl.accept_languages\", user_language)\n    if browser_name == \"chrome\":\n        print(\"\\nstart chrome browser for test..\")\n        browser = webdriver.Chrome(options=options)",
        "detail": "conftest",
        "documentation": {}
    },
    {
        "label": "test_find_basket",
        "kind": 2,
        "importPath": "test_items",
        "description": "test_items",
        "peekOfCode": "def test_find_basket(browser):\n    browser.get(link)\n    #sleep(30)\n    try:\n        basket = browser.find_element(By.CSS_SELECTOR, \"#add_to_basket_form > button\").text\n        print(basket)\n        assert basket == 'Ajouter au panier', str(basket)\n    except Exception:\n        raise",
        "detail": "test_items",
        "documentation": {}
    },
    {
        "label": "link",
        "kind": 5,
        "importPath": "test_items",
        "description": "test_items",
        "peekOfCode": "link = \" http://selenium1py.pythonanywhere.com/catalogue/coders-at-work_207/\"\ndef test_find_basket(browser):\n    browser.get(link)\n    #sleep(30)\n    try:\n        basket = browser.find_element(By.CSS_SELECTOR, \"#add_to_basket_form > button\").text\n        print(basket)\n        assert basket == 'Ajouter au panier', str(basket)\n    except Exception:\n        raise",
        "detail": "test_items",
        "documentation": {}
    }
]